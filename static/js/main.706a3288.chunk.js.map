{"version":3,"sources":["components/content/spin.mp3","components/content/spinMusic.mp3","common_style/colors.ts","components/ParticipantList.tsx","components/Spinner.tsx","components/AddParticipant.tsx","components/common/Popup.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","COLORS","ParticipantList","props","state","participants","removeParticipant","toggleParticipantMarked","participant","index","this","toggle","style","styles","nameContainer","key","marked","icon","clickable","color","onClick","name","length","noParts","map","item","renderItem","nextProps","prevState","React","display","width","margin","padding","flexDirection","justifyContent","fontSize","flexGrow","flexShrink","alignSelf","iconContainer","cursor","fontWeight","Spinner","spinSound","spinMusic","size","height","container","flex","alignItems","flexFlow","doneContainer","base","position","pointer","transform","circle","borderRadius","backgroundColor","overflow","borderColor","borderStyle","borderWidth","innerWedge","transformOrigin","paddingLeft","top","singleName","left","btn","paddingTop","textAlign","spinButton","fontFamily","selectedName","selectedContainer","goldText","WEDGE_COLORS","rotate","rotating","wasSpun","toggleMarked","spin","bind","Audio","require","prevProps","currProps","setState","self","getselectedParticipant","secs","Math","max","random","totalRotation","initialRotation","ticks","currTick","spinTimer","setInterval","val","initial","x","spinType","spinTypes","PI","sin","c3","pow","c1","progress","getVal","clearInterval","pause","load","currentTime","filter","play","wedgeArc","offset","selectedIndex","floor","degrees","nameRotate","wedgeStyle","getWedgeColor","className","ind","wedge","participantLength","colorIndex","y","rot","AddParticipant","addParticipant","disabled","addFunc","addBtn","marginTop","marginLeft","Popup","zIndex","shade","opacity","contentContainer","content","isOpen","console","log","App","savedParts","localStorage","getItem","JSON","parse","newParticipantName","popupOpen","helpContent","src","process","togglePopup","floating","popupIcon","helpIcon","title","participantContainter","inputs","type","nameInput","placeholder","value","onChange","ev","updateParticipantName","onKeyPress","e","enterPressed","canAddName","unMarked","enteredName","find","p","event","onEnter","participantName","push","saveParticipantsToLocalStorage","updatedParticipants","target","setItem","stringify","Component","spinner","spacer","right","newsIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.706a3288.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spin.2a738e54.mp3\";","module.exports = __webpack_public_path__ + \"static/media/spinMusic.725bf97c.mp3\";","export const COLORS = {\r\n  blue:'rgb(81, 192, 232)',\r\n  lightBlue: 'rgb(130, 202, 208)',\r\n  green: 'rgb(189, 222, 148)',\r\n  purple: 'rgb(100, 93, 163)',\r\n  pink: 'rgb(190, 87, 115)',\r\n  gold:  '#d4a659',\r\n  gray: '#191919',\r\n  lightGray: 'rgb(59,59,59)',\r\n}\r\n","import * as React from 'react';\r\nimport { IStyleSheet } from '../App';\r\nimport { COLORS } from '../common_style/colors';\r\nimport { FaCheck, FaTrash } from 'react-icons/fa'\r\n\r\nexport interface Participant {\r\n  name: string;\r\n  marked: boolean;\r\n}\r\n\r\nexport interface ParticipantListProps {\r\n  participants: Participant[]\r\n  removeParticipant: (participant: Participant) => void,\r\n  toggleParticipantMarked:  (participant: Participant) => void\r\n}\r\n\r\ninterface ParticipantsListState {\r\n  participants: Participant[],\r\n  removeParticipant: (participant: Participant) => void,\r\n  toggleParticipantMarked:  (participant: Participant) => void\r\n}\r\n\r\nexport class ParticipantList extends React.Component<ParticipantListProps> {\r\n  state: ParticipantsListState;\r\n\r\n  constructor(props: ParticipantListProps) {\r\n    super(props);\r\n    this.state = {\r\n      participants: props.participants,\r\n      removeParticipant: props.removeParticipant,\r\n      toggleParticipantMarked:  props.toggleParticipantMarked\r\n    }\r\n\r\n  }\r\n\r\n\r\n   static getDerivedStateFromProps(nextProps: ParticipantListProps, prevState: ParticipantsListState) {\r\n     if (nextProps.participants != prevState.participants) {\r\n       return {\r\n         participants: nextProps.participants\r\n       }\r\n     }\r\n   }\r\n\r\n renderItem(participant: Participant, index:number): JSX.Element {\r\n   let removeParticipant = this.state.removeParticipant as ((participant: Participant) => null)\r\n   let toggle = this.state.toggleParticipantMarked\r\n    return(\r\n      <div style={styles.nameContainer} key={index}>\r\n\r\n            {participant.marked\r\n              ? <FaCheck style={{...styles.icon, ...styles.clickable}} color={COLORS.blue} onClick={() => toggle(participant)} />\r\n              :  <FaCheck style={{...styles.icon, ...styles.clickable}} color={COLORS.lightGray} onClick={() => toggle(participant)} />\r\n            }\r\n\r\n          <div onClick={() => toggle(participant)} style={{...styles.name, ...styles.clickable}}>{participant.name}</div>\r\n        <FaTrash onClick={() => removeParticipant(participant)} style={{...styles.icon, ...styles.clickable}} color={COLORS.lightGray} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let participants: Participant[] = this.state.participants\r\n    if (participants.length == 0) {\r\n      return(\r\n        <div>\r\n          <div style={styles.noParts}> Enter some names! </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return(\r\n      <div>\r\n      <div style={styles.noParts}>PARTICIPANTS</div>\r\n        {participants.map((item, index) => this.renderItem(item, index))}\r\n      </div>\r\n    )//render(props.participants);\r\n  }\r\n}\r\n\r\n}\r\n\r\nconst styles: IStyleSheet = {\r\n  nameContainer: {\r\n    display: 'flex',\r\n    width: 240,\r\n    margin: 2,\r\n    padding: 2,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  name: {\r\n    fontSize: 24,\r\n    color: 'white',\r\n    flexGrow: 2\r\n  },\r\n  icon: {\r\n    width: 20,\r\n    padding: 4,\r\n    fontSize: 24,\r\n    flexShrink: 0,\r\n    alignSelf: 'center'\r\n  },\r\n  iconContainer: {\r\n    width: 20,\r\n  },\r\n  clickable: {\r\n    cursor: 'pointer',\r\n  },\r\n  noParts: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: COLORS.gold\r\n\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Participant } from \"./ParticipantList\";\r\nimport { COLORS } from '../common_style/colors';\r\nimport { IStyleSheet } from '../App';\r\nimport { FaArrowRight, FaStar } from 'react-icons/fa';\r\n\r\nexport interface SpinnerProps {\r\n  participants: Participant[],\r\n  toggleMarked: (p: Participant) => void\r\n}\r\n\r\ninterface SpinnerState {\r\n  rotate: number,\r\n  participants: Participant[],\r\n  rotating: boolean,\r\n  wasSpun: boolean,\r\n  toggleMarked: (p: Participant) => void\r\n}\r\n\r\nexport class Spinner extends React.Component<SpinnerProps> {\r\n  state: SpinnerState;\r\n  spinSound: HTMLAudioElement;\r\n  spinMusic: HTMLAudioElement;\r\n\r\n  constructor(props: SpinnerProps) {\r\n       super(props);\r\n       this.state = {\r\n         rotate: 0,\r\n         participants: props.participants,\r\n         rotating: false,\r\n         wasSpun: false,\r\n         toggleMarked: props.toggleMarked\r\n       }\r\n\r\n       this.spin = this.spin.bind(this);\r\n       this.spinSound = new Audio(require(\"./content/spin.mp3\"));\r\n       this.spinMusic = new Audio(require(\"./content/spinMusic.mp3\"));\r\n  }\r\n\r\n  componentDidUpdate(prevProps:SpinnerProps) {\r\n  let currProps: SpinnerProps = this.props as SpinnerProps\r\n   if(prevProps !=currProps) {\r\n     this.setState({\r\n       participants: currProps.participants\r\n     })\r\n   }\r\n  }\r\n\r\n  spin() {\r\n   let self = this\r\n   //if we spun already, mark the last person\r\n   if(self.state.wasSpun) {\r\n     self.state.toggleMarked(self.getselectedParticipant());\r\n   }\r\n\r\n   self.setState({\r\n     rotating: true\r\n   })\r\n\r\n   // min/max seconds to spin\r\n   let min = 4\r\n   let max = 6\r\n   let secs = Math.max(min, (Math.random() * max))\r\n\r\n   let totalRotation = (secs * 500);\r\n   let initialRotation = this.state.rotate;\r\n   let ticks = secs * 100;\r\n   let currTick = 0;\r\n\r\n   function getVal(initial: number, x: number, totalRotation: number, spinType:number = 0) {\r\n     const c4 = (2 * Math.PI) / 3\r\n     let spinTypes = [\r\n       (x:number) => x + 5,\r\n       (x:number) => Math.sin((x * Math.PI) / 2),\r\n       (x:number) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2)\r\n     ]\r\n\r\n     let c1 = 1.70158\r\n     let c3 = 1 + c1;\r\n     let progress = spinTypes[spinType](x);\r\n     return (initial + (progress * totalRotation)) % 360;\r\n   }\r\n\r\n   function tick() {\r\n     let val = getVal(initialRotation, currTick/ticks, totalRotation,1);\r\n     self.setState({\r\n       rotate: val\r\n     })\r\n     currTick+=1;\r\n     if(currTick >= ticks) {\r\n       endSpin();\r\n     }\r\n   }\r\n\r\n   let spinTimer = setInterval(tick, 10)\r\n\r\n   //make sound if spinning\r\n   this.spinSound.currentTime = 5 - secs;\r\n   this.spinMusic.currentTime = 0;\r\n   if(this.state.participants.filter(x => !x.marked).length > 0){\r\n     this.spinSound.play();\r\n     this.spinMusic.play()\r\n   }\r\n\r\n   function endSpin() {\r\n     clearInterval(spinTimer);\r\n     self.spinSound.pause();\r\n     self.spinSound.load();\r\n     self.spinMusic.pause();\r\n     self.spinMusic.load();\r\n     self.setState({\r\n       rotating: false,\r\n       wasSpun: true\r\n     })\r\n   }\r\n   //setTimeout(() => endSpin(), ticks)\r\n  }\r\n\r\n  getselectedParticipant() {\r\n   let participants = this.state.participants;\r\n   let wedgeArc = (360 / participants.length);\r\n   let rotation = this.state.rotate;\r\n\r\n   const ARROW_DEG = 270;\r\n\r\n   let offset = rotation\r\n   let selectedIndex = Math.floor((ARROW_DEG - offset) / wedgeArc);\r\n\r\n   if (selectedIndex < 0) {\r\n     selectedIndex += participants.length\r\n   }\r\n\r\n   // if(participants[selectedIndex] == undefined){\r\n   //   alert(selectedIndex)\r\n   // }\r\n   return participants[selectedIndex];\r\n  }\r\n\r\n\r\n  wedge (name:string, degrees: number, index: number) {\r\n      let offset = degrees * index;\r\n      let nameRotate = degrees/-2;\r\n      return (\r\n        <div style={ {...this.styles.base, ...this.wedgeStyle(offset)} }>\r\n          <div style={\r\n            {\r\n              ...this.styles.innerWedge,\r\n               ...{backgroundColor: this.getWedgeColor(index),\r\n                  transform: `translateY(${this.size.height}px) rotate(${degrees}deg)`\r\n                }\r\n              }\r\n            }>\r\n            <div style={{...this.styles.name, ...{transform: `rotate(${nameRotate}deg)`}}}> {name} </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  render() {\r\n  let state:SpinnerState = this.state\r\n\r\n  if (state.participants.length == 0) {\r\n    return (\r\n      <div style={{...this.styles.container, ...this.styles.doneContainer}}>\r\n        {state.wasSpun &&\r\n        (<div style={this.styles.iconContainer}>\r\n          <FaStar size={60}  color={'#d4a659'} className={'md-star'}/>\r\n          <FaStar size={100}  color={'#d4a659'} className={'md-star'}/>\r\n          <FaStar size={60} color={'#d4a659'} className={'md-star'}/>\r\n        </div>)}\r\n        <div style={this.styles.noParts}>{state.wasSpun ? \"ALL DONE!\" :\"ADD NAMES TO CREATE A WHEEL\"}</div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div style={this.styles.container}>\r\n        {/** Name Display **/}\r\n        <div style={this.styles.nameContainer}>\r\n          <div style={this.styles.selectedName}>\r\n            {!state.wasSpun && !state.rotating\r\n               ? (<span style={this.styles.goldText}>SPIN TO START</span>)\r\n               : (<div style={this.styles.selectedContainer}>\r\n                    <span style={this.styles.goldText}>LANDED ON: </span>{ this.getselectedParticipant() ? this.getselectedParticipant().name : \"-\"}\r\n                  </div>)\r\n            }\r\n          </div>\r\n        </div>\r\n        {/** Wheel **/}\r\n        <div style={{ ...this.styles.base, ...this.styles.circle, ...{ transform: `rotate(${state.rotate}deg)  `} }}>\r\n        {state.participants.length > 1\r\n          ? state.participants.map((item, ind) => this.wedge(item.name, (360 / state.participants.length), ind))\r\n          : (<div style={this.styles.singleName}> {state.participants[0].name}</div>)\r\n        }\r\n       </div>\r\n       {/** Arrow **/}\r\n      <div style={this.styles.pointer}><FaArrowRight color={COLORS.gold}/></div>\r\n      {/** spin button **/}\r\n      { state.rotating ?   <div style={this.styles.btn}/> : (\r\n        <div onClick={this.spin} style={{...this.styles.btn,...this.styles.spinButton}}>\r\n         <span>{state.participants.length > 1 ? \"SPIN!\" : \"DONE!\"}</span>\r\n        </div>\r\n      ) }\r\n      </div>\r\n    )\r\n    }\r\n  }\r\n\r\n  size = {\r\n    height: 600,\r\n    width: 600\r\n  }\r\n\r\n  styles: IStyleSheet = {\r\n    container: {\r\n      display: 'flex',\r\n      flex: 3,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexFlow: 'column',\r\n    },\r\n    doneContainer: {\r\n      flexFlow: 'column'\r\n    },\r\n    base: {\r\n      height: this.size.height,\r\n      width: this.size.width,\r\n      position: 'absolute'\r\n    },\r\n    pointer: {\r\n      fontSize: 75,\r\n      transform: `translateX(${-1 * (this.size.width / 2) - 30}px)`\r\n    },\r\n    circle: {\r\n      borderRadius: 5000,\r\n      backgroundColor: COLORS.lightBlue,\r\n      alignSelf: 'center',\r\n      overflow: 'hidden',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderColor: COLORS.lightGray,\r\n      borderStyle: 'solid',\r\n      borderWidth: 10,\r\n    },\r\n    innerWedge: {\r\n      transform: `translateY(${this.size.height}px)`,\r\n      transformOrigin: '50% 0%',\r\n      height: '100%',\r\n      width: '100%',\r\n    },\r\n    name: {\r\n      color: 'white',\r\n      fontSize: 30,\r\n      width: '100%',\r\n      paddingLeft: 25,\r\n      position: 'relative',\r\n      top: -35\r\n    },\r\n    singleName: {\r\n      fontSize: 40,\r\n      color: 'white',\r\n      position: 'absolute',\r\n      transform: \"translateY(50%)\",\r\n      top: (this.size.height / 2) - 60,\r\n      left: 20\r\n    },\r\n    btn: {\r\n      width: 100,\r\n      height: 40,\r\n      paddingTop:15,\r\n      textAlign: 'center',\r\n      position: 'relative',\r\n      top: (this.size.height / 2) - 10\r\n    },\r\n    spinButton: {\r\n      backgroundColor: COLORS.blue,\r\n      color: 'white',\r\n      alignItems: 'center',\r\n      fontFamily: 'helvetica',\r\n      fontWeight: 400,\r\n      fontSize: 24,\r\n      cursor: 'pointer',\r\n    },\r\n    iconContainer: {\r\n      flexDirection: 'row'\r\n    },\r\n    noParts:{\r\n      fontSize: 24,\r\n      fontWeight: 'bold',\r\n      color: COLORS.gold\r\n    },\r\n    selectedName: {\r\n      fontSize: 36,\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n      padding: 4,\r\n    },\r\n    nameContainer: {\r\n      position: 'relative',\r\n      top: -1 * ((this.size.height / 2) + 0),\r\n      color: 'white'\r\n    },\r\n    selectedContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      width: this.size.width\r\n    },\r\n    goldText: {\r\n      color: COLORS.gold\r\n    }\r\n  }\r\n\r\n  WEDGE_COLORS = [\r\n    COLORS.lightBlue,\r\n    COLORS.green,\r\n    COLORS.pink,\r\n    COLORS.purple\r\n  ]\r\n\r\n  getWedgeColor(index: number) {\r\n    // get color for wedge so there's no repeats\r\n    let participantLength: number = this.state.participants.length;\r\n    let colorIndex: number = index % this.WEDGE_COLORS.length;\r\n    (index == (participantLength - 1) && index % this.WEDGE_COLORS.length == 0) && colorIndex++;\r\n\r\n    return this.WEDGE_COLORS[colorIndex]\r\n  }\r\n\r\n  wedgeStyle (offset = 0) {\r\n    let y = (this.size.width / -2);\r\n    let rot = (offset + 90)\r\n    let style:any = {}\r\n    style.backgroundColor = 'transparent';\r\n    style.transform = `translateY(${y}px) rotate(${rot}deg)`;\r\n    style.transformOrigin = '50% 100%'\r\n    style.overflow = 'hidden'\r\n    return style;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Participant } from './ParticipantList';\r\nimport { COLORS } from '../common_style/colors';\r\n\r\nexport interface AddParticipantProps {\r\n  addParticipant: () => void,\r\n  disabled: boolean\r\n}\r\n\r\nexport class AddParticipant extends React.Component<AddParticipantProps> {\r\n  state: AddParticipantProps\r\n\r\n  constructor(props: AddParticipantProps) {\r\n    super(props);\r\n    this.state = {\r\n      addParticipant: props.addParticipant,\r\n      disabled: props.disabled\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps: AddParticipantProps) {\r\n    if(prevProps != this.props) {\r\n      this.setState({\r\n        disabled: this.props.disabled\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let addFunc = this.state.addParticipant;\r\n    let disabled = this.state.disabled;\r\n    return(\r\n    <div>\r\n      <div style={disabled ? {...styles.addBtn, ...styles.disabled} : styles.addBtn} onClick={() => disabled ? false : addFunc()} > +ADD </div>\r\n    </div>\r\n  )//render(props.participants);\r\n}\r\n\r\n}\r\n\r\nconst styles = {\r\n  addBtn:{\r\n    fontSize: 20,\r\n    color: COLORS.blue,\r\n    marginTop: 10,\r\n    marginLeft: 8,\r\n    cursor: 'pointer'\r\n  },\r\n  disabled:{\r\n    color: COLORS.lightGray,\r\n    cursor: 'not-allowed'\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { IStyleSheet } from '../../App';\r\nimport { COLORS } from '../../common_style/colors';\r\n\r\nexport interface PopupProps {\r\n  content: string | JSX.Element,\r\n  isOpen: boolean,\r\n  toggle: () => void\r\n}\r\n\r\ninterface PopupState {\r\n  content: string | JSX.Element,\r\n  isOpen: boolean\r\n}\r\n\r\nexport class Popup extends React.Component<PopupProps> {\r\n  state: PopupState;\r\n\r\n  constructor(props: PopupProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: props.content,\r\n      isOpen: props.isOpen\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps:PopupProps) {\r\n    if (prevProps != this.props) {\r\n      console.log('popup props changed | open:'+this.props.isOpen)\r\n      this.setState({\r\n        content: this.props.content,\r\n        isOpen: this.props.isOpen\r\n      })\r\n    }\r\n  }\r\n\r\n  closePopup() {\r\n    this.setState({isOpen: false})\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.isOpen) {\r\n      return(\r\n        <div style={this.styles.container}>\r\n          <div style={this.styles.shade} onClick={() => this.props.toggle()}></div>\r\n          <div style={this.styles.contentContainer}>\r\n            {this.props.content}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  margin = 40;\r\n\r\n  styles: IStyleSheet = {\r\n    container: {\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      zIndex: 1000,\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      alignItems: 'center'\r\n    },\r\n    shade: {\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: COLORS.lightGray,\r\n      opacity: 0.7,\r\n      cursor: 'alias'\r\n    },\r\n    contentContainer: {\r\n      position: 'absolute',\r\n      backgroundColor: COLORS.gray,\r\n      opacity: 1,\r\n      padding: 16,\r\n      borderRadius: 5\r\n    }\r\n  }\r\n\r\n}\r\n","import React, { ChangeEvent } from 'react';\nimport {ParticipantList, Participant } from './components/ParticipantList';\nimport {Spinner} from './components/Spinner';\nimport { AddParticipant } from './components/AddParticipant';\nimport { COLORS } from './common_style/colors';\nimport { FaExclamation, FaExclamationCircle, FaQuestionCircle } from 'react-icons/fa';\nimport { Popup } from './components/common/Popup';\n\n\ninterface AppProps {\n  participants: Participant[]\n}\n\ninterface AppState {\n  participants: Participant[],\n  newParticipantName: string,\n  popupOpen: boolean\n}\n\nexport interface IStyleSheet {\n  [key: string]: React.CSSProperties;\n}\n\nexport default class App extends React.Component {\n  state: AppState;\n\n  constructor(props: AppProps) {\n    super(props);\n    let savedParts = localStorage.getItem('participants')\n    let participants = savedParts == null ? [] : JSON.parse(savedParts);\n    this.state = {\n      participants: participants,\n      newParticipantName: \"\",\n      popupOpen: false\n    }\n\n    this.addParticipant = this.addParticipant.bind(this)\n    this.removeParticipant = this.removeParticipant.bind(this)\n    this.toggleParticipantMarked = this.toggleParticipantMarked.bind(this)\n  }\n\n\n  render() {\n    let participants = this.state.participants\n\n    let helpContent = (\n      <div style={{color:'white'}}>\n        <h1 style={{color: COLORS.gold, marginTop:0}}> <FaQuestionCircle/> HOW TO USE</h1>\n        <div style={{display:'flex', justifyContent:'space-evenly', alignItems:'baseline'}}>\n          <div style={{width:200}}>\n            <img src={process.env.PUBLIC_URL+'/help1.png'} style={{width:200}}/>\n            Add items to your spinner using the text input\n          </div>\n          <div style={{width:200}}>\n            <img src={process.env.PUBLIC_URL+'/help2.png'} style={{width:200}}/>\n            Hit SPIN! to start the spinner\n          </div>\n          <div style={{width:200}}>\n            <img src={process.env.PUBLIC_URL+'/help3.png'} style={{width:200}}/>\n            After an item has been landed on, it is automiatically removed from the wheel\n          </div>\n        </div>\n        <p/>\n        <ul>\n          <li>To hide or unhide a specific item from the wheel, click the item in the list</li>\n          <li>Clicking the trash icon will remove that item from the list</li>\n        </ul>\n        <FaExclamation style={{color:COLORS.gold}}/>Your list of items is saved to the browser, you won't have to re-enter the items if you close or refresh the page!\n      </div>\n    )\n    return (\n      <div style={styles.container}>\n      <Popup content={helpContent} isOpen={this.state.popupOpen} toggle={this.togglePopup.bind(this)} />\n      <div style={{...styles.floating, ...styles.popupIcon, ...styles.helpIcon}} title=\"Help\">\n       <FaQuestionCircle onClick={this.togglePopup.bind(this)}/>\n       </div>\n       {\n         /**\n         TODO: what's new popup\n        <div style={{...styles.floating, ...styles.popupIcon, ...styles.newsIcon}} title=\"What's New\">\n          <FaExclamationCircle onClick={this.togglePopup.bind(this)}/>\n        </div>\n        **/\n      }\n      <div style={styles.participantContainter}>\n        <ParticipantList participants={participants} removeParticipant={this.removeParticipant} toggleParticipantMarked={this.toggleParticipantMarked}/>\n        <div style={styles.inputs}>\n          <input type=\"text\" style={styles.nameInput} placeholder={\"Enter a name\"} value={this.state.newParticipantName} onChange={(ev) => this.updateParticipantName(ev)} onKeyPress={(e) => this.enterPressed(e,this.addParticipant)} />\n          <AddParticipant disabled={!this.canAddName()} addParticipant={this.addParticipant}/>\n        </div>\n      </div>\n        <Spinner participants = {this.unMarked()} toggleMarked={this.toggleParticipantMarked}/>\n      </div>\n    );\n  }\n\n  unMarked() {\n    return this.state.participants.filter((participant: Participant) => !participant.marked)\n  }\n\n  canAddName() {\n    let participants = this.state.participants;\n    let enteredName = this.state.newParticipantName;\n\n    let exists = (participants.find((p:Participant) => p.name == enteredName) != null)\n\n    return !(exists || (enteredName == \"\" || enteredName == null))\n  }\n\n  enterPressed(event: React.KeyboardEvent<HTMLElement>, onEnter: () => void) {\n    if(event.key === 'Enter') {\n      onEnter();\n    }\n  }\n\n  addParticipant() {\n    if(this.canAddName()) {\n      let participants = this.state.participants;\n      let participantName = this.state.newParticipantName;\n      participants.push({\n        name: participantName,\n        marked: false\n      })\n      this.setState({\n        newParticipantName: \"\",\n        participants: participants\n      })\n\n      this.saveParticipantsToLocalStorage(participants);\n    }\n  }\n\n  removeParticipant(participant: Participant) {\n    let participants = this.state.participants\n    let updatedParticipants = participants.filter((p: Participant) => p.name != participant.name);\n    this.setState({\n      participants: updatedParticipants\n    })\n\n    this.saveParticipantsToLocalStorage(updatedParticipants);\n  }\n\n  toggleParticipantMarked(participant: Participant) {\n    let participants = this.state.participants;\n    let p = participants.find((p:Participant) => p && (p.name == participant.name) );\n    if (p != null) {\n      p.marked = !p.marked;\n      this.setState({\n        participants: participants\n      })\n    }\n  }\n\n  updateParticipantName(nameInput : ChangeEvent<HTMLInputElement>) {\n    let name = nameInput.target.value;\n\n    this.setState({\n      newParticipantName: name\n    })\n  }\n\n  saveParticipantsToLocalStorage(participants: Participant[]) {\n    participants.map(p => p.marked = false);\n\n    localStorage.setItem('participants', JSON.stringify(participants))\n  }\n\n  togglePopup() {\n    this.setState({popupOpen: !this.state.popupOpen})\n  }\n}\n\n\nconst styles: IStyleSheet = {\n  container: {\n    display: 'flex',\n    position: 'absolute',\n    flex: 1,\n    backgroundColor: COLORS.gray,\n    width: '100%',\n    height: '100%',\n    flexDirection: \"row\",\n    alignItems: 'center'\n  },\n  participantContainter: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  participants: {\n    flexGrow: 3\n  },\n  spinner: {\n    flex: 3\n  },\n  spacer: {\n    flex: 1\n  },\n  inputs: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'row',\n    padding: 6\n  },\n  nameInput: {\n    padding: 8,\n    borderColor: 'gray',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    height: 30,\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderRadius: 5\n  },\n  floating: {\n    position: 'absolute'\n  },\n  popupIcon: {\n    color: COLORS.lightBlue,\n    fontSize: 30,\n    cursor: 'pointer'\n  },\n  helpIcon: {\n    right: 10,\n    top: 10,\n  },\n  newsIcon: {\n    right: 45,\n    top: 10,\n    color: COLORS.gold\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}